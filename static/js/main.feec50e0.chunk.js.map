{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChanger","paginsLength","Math","ceil","pagins","handlePageChange","page","className","classNames","disabled","href","onClick","map","active","items","App","useState","setPerPage","setCurrentPage","start","end","length","visibleItems","slice","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,cAEMC,EAAeC,KAAKC,KAAKN,EAAQC,GACjCM,EAAmBd,EAAW,EAAGW,GAEjCI,EAAmB,SAACC,GACpBA,IAASP,GAAeO,EAAOL,GAAgBK,EAAO,GAI1DN,EAAcM,IAGhB,OACE,qBAAIC,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CAAEC,SAA0B,IAAhBV,IAHhB,SAME,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBX,EACfY,QAAS,kBAAMN,EAAiBN,EAAc,IALhD,oBAWDK,EAAOQ,KAAI,SAAAN,GACV,OACE,oBAEEC,UAAWC,IACT,YACA,CAAEK,OAAQP,IAASP,IAJvB,SAOE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMJ,GACVK,QAAS,kBAAMX,EAAcM,IAJ/B,SAMGA,KAbL,eACeA,OAkBnB,oBACEC,UAAWC,IACT,YACA,CAAEC,SAAUV,IAAgBE,IAHhC,SAME,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAAeX,IAAgBE,EAC/BU,QAAS,kBAAMN,EAAiBN,EAAc,IALhD,wBCrEFe,EAAQxB,EAAW,EAAG,IACzBsB,KAAI,SAAAlB,GAAC,qBAAYA,MAEPqB,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOlB,EAAP,KAAgBmB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOjB,EAAP,KAAoBmB,EAApB,KAEMC,EAASrB,EAAUC,EAAeD,EAClCsB,EAAQD,EAAQrB,GAAYgB,EAAMO,OACpCF,EAAQrB,EACRgB,EAAMO,OACJC,EAAeR,EAAMS,MAAMJ,EAAOC,GAQxC,OACE,sBAAKb,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCoB,EAAQ,EADzC,cACgDC,EADhD,eAC0DN,EAAMO,OADhE,OAIA,sBAAKd,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRiB,GAAG,kBACHjB,UAAU,eACVkB,MAAO3B,EACP4B,SArBW,SAACC,GACpBV,GAAYU,EAAMC,OAAOH,OAEzBP,EAAe,IAaT,UAOE,wBAAQO,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBtB,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEV,MAAOiB,EAAMO,OAAS,EACtBvB,QAASA,EACTC,YAAaA,EACbC,cAAekB,IAEf,6BACCI,EAAaV,KAAI,SAAAkB,GAAI,OAClB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCzDpCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.feec50e0.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChanger: (num: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChanger,\n}) => {\n  const paginsLength = Math.ceil(total / perPage);\n  const pagins: number[] = getNumbers(1, paginsLength);\n\n  const handlePageChange = (page: number) => {\n    if (page === currentPage || page > paginsLength || page < 1) {\n      return;\n    }\n\n    onPageChanger(page);\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames(\n          'page-item',\n          { disabled: currentPage === 1 },\n        )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => handlePageChange(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n\n      {pagins.map(page => {\n        return (\n          <li\n            key={`page-${page}`}\n            className={classNames(\n              'page-item',\n              { active: page === currentPage },\n            )}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => onPageChanger(page)}\n            >\n              {page}\n            </a>\n          </li>\n        );\n      })}\n\n      <li\n        className={classNames(\n          'page-item',\n          { disabled: currentPage === paginsLength },\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === paginsLength}\n          onClick={() => handlePageChange(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const start = (perPage * currentPage) - perPage;\n  const end = ((start + perPage) <= items.length)\n    ? start + perPage\n    : items.length;\n  const visibleItems = items.slice(start, end);\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${start + 1} - ${end} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handleChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={items.length - 1}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChanger={setCurrentPage}\n      />\n        <ul>\n        {visibleItems.map(item => (\n            <li data-cy=\"item\" key={item}>\n              {item}\n            </li>\n          ))}\n        </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}